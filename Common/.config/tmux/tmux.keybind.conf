#------------------------------------------------------------------------------

# あるセッションは複数のウィンドウから構成され，一つのウィンドウの中には
# 複数のペインが含まれる
#
# 略記法
# [key] = prefix + key
# (key) = Alt + key
# === 概略図とキーバインド ===
#
#         +----------------+
#         |    (←,→,h,l)   ↓(num) OR click status bar       ↓ (Enter)
#      window1 <------> window2          window3         新規 window4
#   ===============================================================
#       pane1            pane1            pane1           pane1
#         ↕ (j,k) フォーカス
#       pane2     + - -  pane2 - 移動 -> |pane2|
#                 |移動           (L)
#      |pane3| <- +      pane3
#                (H)       ↓ (x)                            ↓ (X)
#                      ペイン削除                     ウィンドウ削除
#
#
# === ウィンドウ内の操作 ===
#
#   +---------------+------------+
#   |pane1          |pane3       |
#   |               |            |
#   |               |            |
#   +---------------+            |
#   |pane2          |            |
#   |               |            |
#   |               |            |
#   +---------------+------------+
#
# ペイン分割:
#   - 左右に分割         : (|)
#   - 上下に分割         : (-)
# フォーカスを動かす     : (j),(k) OR マウスでクリック
# ペインの順序を入れ替え : (J),(K)
# ペインを削除           : (x)
# レイアウトを変更       : (Space)
# 1つのペインを全画面に  : (f)
# ペイン境界を動かす:
#             (a)
#              ↑
#        (,) ← + → (.)
#              ↓        OR マウスで境界をドラッグ
#             (z)

#------------------------------------------------------------------------------
# Keybind (normal mode)
#------------------------------------------------------------------------------

# prefix key ^b -> ^g
set -g prefix C-g
bind-key C-g send-prefix

# vi like key binding
# もとから準備されているセットを使う
setw -g mode-keys vi
#bind-key -t vi-copy v begin-selection

# Update default binding of `Enter` to also use copy-pipe
unbind -Tcopy-mode-vi Enter
 
# Setup 'v' to begin selection as in Vim
bind -Tcopy-mode-vi v send -X begin-selection

# (x): ペインを削除する
# ただし，ウィンドウ内に1つだけしかないときには確認メッセージを出す
bind-key -n M-x "confirm-before -p \"Kill the pane? (y/n)\" kill-pane"

# (X): ウィンドウを削除する
# ただし，セッション内に1つだけしかないときには確認メッセージを出す
bind-key -n M-X "confirm-before -p \"Kill the window? (y/n)\" kill-window" \

# (-): 上下に分割, (|): 左右に分割
bind-key -n M-- split-window -v -c "#{pane_current_path}"
bind-key -n M-| split-window -h -c "#{pane_current_path}"

# [s]: 上下に分割，[v]: 左右に分割
bind-key s split-window -v -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"

# (j)/(Down): フォーカスを次に，(k)/(Up)フォーカスを前に
bind-key -n M-j select-pane -t :.+
bind-key -n M-k select-pane -t :.-
bind-key -n M-Down select-pane -t :.+
bind-key -n M-Up select-pane -t :.-

# (m): マスターペイン(ペイン番号1)にフォーカス
bind-key -n M-m select-pane -t :.1

# (M): 選択したペインをマスターペインに移動
bind-key -n M-M swap-pane -d -t :.1

# (J)/(K): ペインの順番入れ替え
bind-key -n M-J swap-pane -D
bind-key -n M-K swap-pane -U
bind-key J swap-pane -D
bind-key K swap-pane -U

# (,)/(.): 左右にペイン境界を動かす
# (a)/(z): 上下にペイン境界を動かす
bind-key -n M-, resize-pane -L 1
bind-key -n M-z resize-pane -D 1
bind-key -n M-a resize-pane -U 1
bind-key -n M-. resize-pane -R 1
bind-key -n M-= resize-pane -y 50

# (f): 選択したペインを最大化表示
bind-key -n M-f resize-pane -Z

# (q): 各ペイン番号を表示
bind-key -n M-q display-panes

# (h)/(Left): 左のウィンドウにフォーカス
# (l),(Right): 右のウィンドウにフォーカス
bind-key -n M-Right next-window
bind-key -n M-Left previous-window
bind-key -n M-l next-window
bind-key -n M-h previous-window

# (Space): ペインレイアウトを変更
bind-key -n M-Space next-layout

# (number): 指定した番号のウィンドウにフォーカス
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# [W]: ウィンドウ名を指定してフォーカス
bind-key W command-prompt "select-window -t '%%'"

# (Enter): 新しいウィンドウを作成
bind-key -n M-Enter new-window -c "#{pane_current_path}"

# [t]: ツリー表示モード(今あるセッション，その中のウィンドウにアタッチ)
bind-key t choose-tree

# [Ctrl + C]: フォーカスされているペインの内容をコピーして新しいウィンドウでvimで開く
bind-key C-c run 'tmux capture-pane -S -10240 -p > /tmp/tmux-capture.txt'\;\
             new-window "vim + /tmp/tmux-capture.txt"

# F11: ステータスバーの表示をトグルする
bind-key -n F11 set status

# ^b + r: 設定ファイルを再読み込み
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

# key stroke
set -s escape-time 0

#------------------------------------------------------------------------------

